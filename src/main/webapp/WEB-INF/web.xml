<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	
	<display-name>angular-rest-springsecurity</display-name>
	
	<!--
		Load Spring Context 
	 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/context.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--
		Map the REST Servlet to /rest/ 
	 -->
	<servlet>
		<servlet-name>RestService</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>jlm.rest</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>RestService</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>restService</filter-name>
		<filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>org.glassfish.jersey.examples.bookstore.webapp.MyApplication</param-value>
		</init-param>
		<!-- pass to next filter if Jersey/App returns 404 -->
		<init-param>
			<param-name>jersey.config.servlet.filter.forwardOn404</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>restService</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	


	<filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>